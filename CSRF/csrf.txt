# construct a CSRF attack

right-click context menu, select Engagement tools / Generate CSRF PoC. 

HTML that will trigger the selected request (minus cookies, which will be added automatically by the victim's browser). 

# Common defences against CSRF

1 CSRF tokens
2 SameSite cookies
3 Referer-based validation


#Bypassing CSRF token validation

1 Validation of CSRF token depends on request method
    -> attacker can switch to the GET method to bypass the validation and deliver a CSRF attack: 
    Use "Change request method" on the context menu to convert it into a GET request and observe that the CSRF token is no longer verified. 

2 Validation of CSRF token depends on token being present
    -> Some applications correctly validate the token when it is present but skip the validation if the token is omitted. 

3 No Link Between CSRF token and user session (user session cookies)
    Make a note of the value of the CSRF token, then drop the request/response  {or just coppy all key: value pairs}
    and replave it in victims request or response

    ``` wiener:peter
        carlos:montoya        
        email=hahah%40gmail.com&csrf=rfryk9Rh3zBYmz9YAtPBhGom91q0qdWv
    ```
4 CSRF where token is tied to non-session cookie
    
   

